{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../token.service\";\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    constructor(tokenService) {\n      this.tokenService = tokenService;\n      this.usuarioSubject = new BehaviorSubject({});\n      /* Se já existe token, propaga o estado do usuário. */\n\n      if (this.tokenService.possuiToken()) {\n        this.decodificaJWT();\n      }\n    }\n    /**\r\n     * Decodifica o token para o objeto (Usuario).\r\n     */\n\n\n    decodificaJWT() {\n      const token = this.tokenService.recupera();\n      const usuario = jwt_decode(token);\n      /* Propaga o estado do usuário. */\n\n      this.usuarioSubject.next(usuario);\n    }\n    /**\r\n     * Obtém o estado do usuário.\r\n     * @returns O estado do usuário como um Observable.\r\n     */\n\n\n    retornaUsuario() {\n      return this.usuarioSubject.asObservable();\n    }\n    /**\r\n     * Salva o token do usuario e propaga o seu estado.\r\n     * @param token Sequência de caracteres ao qual um token possui.\r\n     */\n\n\n    salvaToken(token) {\n      this.tokenService.salva(token);\n      this.decodificaJWT();\n    }\n    /**\r\n     * Exclui o token e limpa o estado do usuário.\r\n     */\n\n\n    logout() {\n      this.tokenService.exclui();\n      this.usuarioSubject.next({});\n    }\n    /**\r\n     * Verifica se existe um token para o usuário.\r\n     * @returns true se possuir (logado). Caso contrário, false (não logado).\r\n     */\n\n\n    estaLogado() {\n      return this.tokenService.possuiToken();\n    }\n\n  }\n\n  UsuarioService.ɵfac = function UsuarioService_Factory(t) {\n    return new (t || UsuarioService)(i0.ɵɵinject(i1.TokenService));\n  };\n\n  UsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioService,\n    factory: UsuarioService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioService;\n})();","map":null,"metadata":{},"sourceType":"module"}