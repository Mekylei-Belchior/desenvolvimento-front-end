{"ast":null,"code":"import { map, first, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./novo-usuario.service\";\nexport let UsuarioExisteService = /*#__PURE__*/(() => {\n  class UsuarioExisteService {\n    constructor(novoUsuarioService) {\n      this.novoUsuarioService = novoUsuarioService;\n    }\n    /**\r\n     * Valida o valor digitado no campo de usuário afim de determinar se o mesmo já existe na base de dados.\r\n     * @returns Um objeto com o valor de propriedade como (True), indicando que o usuário já existe. Caso contrário, null.\r\n     */\n\n\n    usuarioJaExiste() {\n      return control => {\n        return control.valueChanges.pipe(switchMap(nomeUsuario => this.novoUsuarioService.verificaUsuarioExistente(nomeUsuario)), map(usuarioExiste => usuarioExiste ? {\n          usuarioExistente: true\n        } : null), first());\n      };\n    }\n\n  }\n\n  UsuarioExisteService.ɵfac = function UsuarioExisteService_Factory(t) {\n    return new (t || UsuarioExisteService)(i0.ɵɵinject(i1.NovoUsuarioService));\n  };\n\n  UsuarioExisteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioExisteService,\n    factory: UsuarioExisteService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioExisteService;\n})();","map":null,"metadata":{},"sourceType":"module"}